{"ast":null,"code":"// export const BASE_URL = 'http://saitovkmsapi.nomoredomains.xyz/';\nexport var BASE_URL='';var NODE_ENV=process.env.NODE_ENV;if(NODE_ENV==='production'){BASE_URL='https://saitovkmsapi.nomoredomains.xyz/';}else{BASE_URL='http://localhost:3000';}function checkResponse(res){if(res.ok){return res.json();}return Promise.reject(res.status);}export var register=function register(email,password){return fetch(\"\".concat(BASE_URL,\"/signup\"),{method:'POST',headers:{'Accept':'application/json','Content-Type':'application/json'},body:JSON.stringify({\"email\":email,\"password\":password})}).then(checkResponse);};export var authorize=function authorize(email,password){return fetch(\"\".concat(BASE_URL,\"/signin\"),{method:'POST',headers:{'Accept':'application/json','Content-Type':'application/json'},body:JSON.stringify({\"email\":email,\"password\":password})}).then(checkResponse);};export var checkToken=function checkToken(){return fetch(\"\".concat(BASE_URL,\"/users/me\"),{method:'GET',headers:{'Accept':'application/json','Content-Type':'application/json','Authorization':\"Bearer \".concat(localStorage.getItem('jwt'))}}).then(checkResponse);};","map":{"version":3,"sources":["/Users/nikolay/Desktop/react-mesto-api-full/frontend/src/utils/auth.js"],"names":["BASE_URL","NODE_ENV","process","env","checkResponse","res","ok","json","Promise","reject","status","register","email","password","fetch","method","headers","body","JSON","stringify","then","authorize","checkToken","localStorage","getItem"],"mappings":"AAAA;AAEA,MAAO,IAAIA,CAAAA,QAAQ,CAAG,EAAf,CACP,GAAQC,CAAAA,QAAR,CAAqBC,OAAO,CAACC,GAA7B,CAAQF,QAAR,CACA,GAAKA,QAAQ,GAAK,YAAlB,CAAiC,CAC7BD,QAAQ,CAAG,yCAAX,CACH,CAFD,IAEO,CACHA,QAAQ,CAAG,uBAAX,CACH,CAKD,QAASI,CAAAA,aAAT,CAAuBC,GAAvB,CAA4B,CACxB,GAAIA,GAAG,CAACC,EAAR,CAAY,CACR,MAAOD,CAAAA,GAAG,CAACE,IAAJ,EAAP,CACH,CACD,MAAOC,CAAAA,OAAO,CAACC,MAAR,CAAeJ,GAAG,CAACK,MAAnB,CAAP,CACH,CAED,MAAO,IAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAACC,KAAD,CAAQC,QAAR,CAAqB,CACzC,MAAOC,CAAAA,KAAK,WAAId,QAAJ,YAAuB,CAC/Be,MAAM,CAAE,MADuB,CAE/BC,OAAO,CAAE,CACL,SAAU,kBADL,CAEL,eAAgB,kBAFX,CAFsB,CAM/BC,IAAI,CAAEC,IAAI,CAACC,SAAL,CAAe,CACjB,QAASP,KADQ,CAEjB,WAAYC,QAFK,CAAf,CANyB,CAAvB,CAAL,CAUJO,IAVI,CAUChB,aAVD,CAAP,CAWH,CAZM,CAcP,MAAO,IAAMiB,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,CAACT,KAAD,CAAQC,QAAR,CAAqB,CAC1C,MAAOC,CAAAA,KAAK,WAAId,QAAJ,YAAuB,CAC/Be,MAAM,CAAE,MADuB,CAE/BC,OAAO,CAAE,CACL,SAAU,kBADL,CAEL,eAAgB,kBAFX,CAFsB,CAM/BC,IAAI,CAAEC,IAAI,CAACC,SAAL,CAAe,CACjB,QAASP,KADQ,CAEjB,WAAYC,QAFK,CAAf,CANyB,CAAvB,CAAL,CAUJO,IAVI,CAUChB,aAVD,CAAP,CAWH,CAZM,CAcP,MAAO,IAAMkB,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,EAAM,CAC5B,MAAOR,CAAAA,KAAK,WAAId,QAAJ,cAAyB,CACjCe,MAAM,CAAE,KADyB,CAEjCC,OAAO,CAAE,CACL,SAAU,kBADL,CAEL,eAAgB,kBAFX,CAGL,iCAA2BO,YAAY,CAACC,OAAb,CAAqB,KAArB,CAA3B,CAHK,CAFwB,CAAzB,CAAL,CAQNJ,IARM,CAQDhB,aARC,CAAP,CASH,CAVM","sourcesContent":["// export const BASE_URL = 'http://saitovkmsapi.nomoredomains.xyz/';\n\nexport let BASE_URL = '';\nconst { NODE_ENV } = process.env;\nif ( NODE_ENV === 'production' ) {\n    BASE_URL = 'https://saitovkmsapi.nomoredomains.xyz/';\n} else {\n    BASE_URL = 'http://localhost:3000'\n}\n\n\n\n   \nfunction checkResponse(res) {\n    if (res.ok) {\n        return res.json();\n    }\n    return Promise.reject(res.status);\n}\n\nexport const register = (email, password) => {\n    return fetch(`${BASE_URL}/signup`, {\n        method: 'POST',\n        headers: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n            \"email\": email,\n            \"password\": password\n        })\n    }).then(checkResponse);\n};\n\nexport const authorize = (email, password) => {\n    return fetch(`${BASE_URL}/signin`, {\n        method: 'POST',\n        headers: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n            \"email\": email,\n            \"password\": password\n        })\n    }).then(checkResponse);\n};\n\nexport const checkToken = () => {\n    return fetch(`${BASE_URL}/users/me`, {\n        method: 'GET',\n        headers: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json',\n            'Authorization': `Bearer ${localStorage.getItem('jwt')}`,\n        }\n    })\n    .then(checkResponse);\n}"]},"metadata":{},"sourceType":"module"}