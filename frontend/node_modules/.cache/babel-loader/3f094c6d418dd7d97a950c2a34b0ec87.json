{"ast":null,"code":"export const BASE_URL = 'http://localhost:3000/';\n\nfunction checkResponse(res) {\n  if (res.ok) {\n    return res.json();\n  }\n\n  return Promise.reject(res.status);\n}\n\nexport const register = (email, password, token) => {\n  return fetch(`${BASE_URL}/signup`, {\n    method: 'POST',\n    headers: {\n      'Authorization': `Bearer ${token}`,\n      'Accept': 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      \"email\": email,\n      \"password\": password\n    })\n  }).then(checkResponse);\n};\nexport const authorize = (email, password, token) => {\n  return fetch(`${BASE_URL}/signin`, {\n    method: 'POST',\n    headers: {\n      'Authorization': `Bearer ${token}`,\n      'Accept': 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      \"email\": email,\n      \"password\": password\n    })\n  }).then(checkResponse);\n};\nexport const checkToken = token => {\n  return fetch(`${BASE_URL}/users/me`, {\n    method: 'GET',\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json',\n      'Authorization': `Bearer ${token}`\n    }\n  }).then(checkResponse);\n};","map":{"version":3,"sources":["/Users/nikolay/Desktop/react-mesto-api-full/frontend/src/utils/auth.js"],"names":["BASE_URL","checkResponse","res","ok","json","Promise","reject","status","register","email","password","token","fetch","method","headers","body","JSON","stringify","then","authorize","checkToken"],"mappings":"AAAA,OAAO,MAAMA,QAAQ,GAAG,wBAAjB;;AAIP,SAASC,aAAT,CAAuBC,GAAvB,EAA4B;AACxB,MAAIA,GAAG,CAACC,EAAR,EAAY;AACR,WAAOD,GAAG,CAACE,IAAJ,EAAP;AACH;;AACD,SAAOC,OAAO,CAACC,MAAR,CAAeJ,GAAG,CAACK,MAAnB,CAAP;AACH;;AAED,OAAO,MAAMC,QAAQ,GAAG,CAACC,KAAD,EAAQC,QAAR,EAAkBC,KAAlB,KAA4B;AAChD,SAAOC,KAAK,CAAE,GAAEZ,QAAS,SAAb,EAAuB;AAC/Ba,IAAAA,MAAM,EAAE,MADuB;AAE/BC,IAAAA,OAAO,EAAE;AACL,uBAAkB,UAASH,KAAM,EAD5B;AAEL,gBAAU,kBAFL;AAGL,sBAAgB;AAHX,KAFsB;AAO/BI,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACjB,eAASR,KADQ;AAEjB,kBAAYC;AAFK,KAAf;AAPyB,GAAvB,CAAL,CAWJQ,IAXI,CAWCjB,aAXD,CAAP;AAYH,CAbM;AAeP,OAAO,MAAMkB,SAAS,GAAG,CAACV,KAAD,EAAQC,QAAR,EAAkBC,KAAlB,KAA4B;AACjD,SAAOC,KAAK,CAAE,GAAEZ,QAAS,SAAb,EAAuB;AAC/Ba,IAAAA,MAAM,EAAE,MADuB;AAE/BC,IAAAA,OAAO,EAAE;AACL,uBAAkB,UAASH,KAAM,EAD5B;AAEL,gBAAU,kBAFL;AAGL,sBAAgB;AAHX,KAFsB;AAO/BI,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACjB,eAASR,KADQ;AAEjB,kBAAYC;AAFK,KAAf;AAPyB,GAAvB,CAAL,CAWJQ,IAXI,CAWCjB,aAXD,CAAP;AAYH,CAbM;AAeP,OAAO,MAAMmB,UAAU,GAAIT,KAAD,IAAW;AACjC,SAAOC,KAAK,CAAE,GAAEZ,QAAS,WAAb,EAAyB;AACjCa,IAAAA,MAAM,EAAE,KADyB;AAEjCC,IAAAA,OAAO,EAAE;AACL,gBAAU,kBADL;AAEL,sBAAgB,kBAFX;AAGL,uBAAkB,UAASH,KAAM;AAH5B;AAFwB,GAAzB,CAAL,CAQNO,IARM,CAQDjB,aARC,CAAP;AASH,CAVM","sourcesContent":["export const BASE_URL = 'http://localhost:3000/';\n\n\n   \nfunction checkResponse(res) {\n    if (res.ok) {\n        return res.json();\n    }\n    return Promise.reject(res.status);\n}\n\nexport const register = (email, password, token) => {\n    return fetch(`${BASE_URL}/signup`, {\n        method: 'POST',\n        headers: {\n            'Authorization': `Bearer ${token}`,\n            'Accept': 'application/json',\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n            \"email\": email,\n            \"password\": password\n        })\n    }).then(checkResponse);\n};\n\nexport const authorize = (email, password, token) => {\n    return fetch(`${BASE_URL}/signin`, {\n        method: 'POST',\n        headers: {\n            'Authorization': `Bearer ${token}`,\n            'Accept': 'application/json',\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n            \"email\": email,\n            \"password\": password\n        })\n    }).then(checkResponse);\n};\n\nexport const checkToken = (token) => {\n    return fetch(`${BASE_URL}/users/me`, {\n        method: 'GET',\n        headers: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json',\n            'Authorization': `Bearer ${token}`,\n        }\n    })\n    .then(checkResponse);\n}"]},"metadata":{},"sourceType":"module"}