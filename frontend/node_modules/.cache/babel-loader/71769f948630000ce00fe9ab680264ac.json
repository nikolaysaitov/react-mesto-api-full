{"ast":null,"code":"class Api {\n  constructor(_ref) {\n    let {\n      baseUrl,\n      headers\n    } = _ref;\n    this._headers = headers;\n    this._baseUrl = baseUrl; // тело конструктора\n  }\n\n  _getResponseData(res) {\n    if (!res.ok) {\n      return Promise.reject(`Ошибка: ${res.status}`);\n    }\n\n    return res.json();\n  }\n\n  getProfile() {\n    return fetch(`${this._baseUrl}/users/me`, {\n      headers: this._headers\n    }).then(this._getResponseData);\n  }\n\n  getInitialCards() {\n    return fetch(`${this._baseUrl}/cards`, {\n      headers: this._headers\n    }).then(this._getResponseData);\n  }\n\n  editProfile(name, about) {\n    return fetch(`${this._baseUrl}/users/me`, {\n      method: \"PATCH\",\n      headers: this._headers,\n      body: JSON.stringify({\n        name,\n        about\n      })\n    }).then(this._getResponseData);\n  }\n\n  addCard(name, link) {\n    return fetch(`${this._baseUrl}/cards`, {\n      method: \"POST\",\n      headers: this._headers,\n      body: JSON.stringify({\n        name,\n        link\n      })\n    }).then(this._getResponseData);\n  }\n\n  deleteCard(id) {\n    return fetch(`${this._baseUrl}/cards/${id}`, {\n      method: \"DELETE\",\n      headers: this._headers\n    }).then(this._getResponseData);\n  }\n\n  deleteLike(id) {\n    return fetch(`${this._baseUrl}/cards/${id}/likes`, {\n      method: \"DELETE\",\n      headers: this._headers\n    }).then(this._getResponseData);\n  }\n\n  addLike(id) {\n    return fetch(`${this._baseUrl}/cards/${id}/likes`, {\n      method: \"PUT\",\n      headers: this._headers\n    }).then(this._getResponseData);\n  }\n\n  updateAvatar(avatar) {\n    return fetch(`${this._baseUrl}/users/me/avatar`, {\n      method: \"PATCH\",\n      headers: this._headers,\n      body: JSON.stringify({\n        avatar\n      })\n    }).then(this._getResponseData);\n  } // другие методы работы с API\n\n\n} // export const api = new Api({\n//   baseUrl: \"https://mesto.nomoreparties.co/v1/cohort-39\",\n//   headers: {\n//     authorization: \"083f1856-1d24-41b5-bab8-7705d2d18558\",\n//     \"Content-Type\": \"application/json\",\n//   },\n// });\n\n\nexport const api = new Api({\n  baseUrl: \"http://localhost:3000/\"\n});","map":{"version":3,"sources":["/Users/nikolay/Desktop/react-mesto-api-full/frontend/src/utils/Api.js"],"names":["Api","constructor","baseUrl","headers","_headers","_baseUrl","_getResponseData","res","ok","Promise","reject","status","json","getProfile","fetch","then","getInitialCards","editProfile","name","about","method","body","JSON","stringify","addCard","link","deleteCard","id","deleteLike","addLike","updateAvatar","avatar","api"],"mappings":"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","sourcesContent":["class Api {\n  constructor({ baseUrl, headers }) {\n    this._headers = headers;\n    this._baseUrl = baseUrl; // тело конструктора\n  }\n\n  _getResponseData(res) {\n    if (!res.ok) {\n        return Promise.reject(`Ошибка: ${res.status}`);\n    }\n    return res.json();\n}\n\n  getProfile() {\n    return fetch(`${this._baseUrl}/users/me`, {\n      headers: this._headers,\n    })\n      .then(this._getResponseData)\n      \n  }\n\n  getInitialCards() {\n    return fetch(`${this._baseUrl}/cards`, {\n      headers: this._headers,\n    })\n    .then(this._getResponseData)\n      \n  }\n\n  editProfile(name, about) {\n    return fetch(`${this._baseUrl}/users/me`, {\n      method: \"PATCH\",\n      headers: this._headers,\n      body: JSON.stringify({\n        name,\n        about,\n      }),\n    })\n    .then(this._getResponseData)\n    \n  }\n  addCard(name, link) {\n    return fetch(`${this._baseUrl}/cards`, {\n      method: \"POST\",\n      headers: this._headers,\n      body: JSON.stringify({\n        name,\n        link,\n      }),\n    })\n    .then(this._getResponseData)\n    \n  }\n  deleteCard(id) {\n    return fetch(`${this._baseUrl}/cards/${id}`, {\n      method: \"DELETE\",\n      headers: this._headers\n    })\n    .then(this._getResponseData)\n      \n  }\n\n  deleteLike(id) {\n    return fetch(`${this._baseUrl}/cards/${id}/likes`, {\n      method: \"DELETE\",\n      headers: this._headers\n    })\n    .then(this._getResponseData)\n      \n  }\n\n  addLike(id) {\n    return fetch(`${this._baseUrl}/cards/${id}/likes`, {\n      method: \"PUT\",\n      headers: this._headers\n    })\n    .then(this._getResponseData)\n    \n  }\n\n  \n  updateAvatar(avatar) {\n    return fetch(`${this._baseUrl}/users/me/avatar`, {\n      method: \"PATCH\",\n      headers: this._headers,\n      body: JSON.stringify({\n        avatar\n      })\n    })\n    .then(this._getResponseData)\n    \n  }\n  \n\n  // другие методы работы с API\n}\n\n// export const api = new Api({\n//   baseUrl: \"https://mesto.nomoreparties.co/v1/cohort-39\",\n//   headers: {\n//     authorization: \"083f1856-1d24-41b5-bab8-7705d2d18558\",\n//     \"Content-Type\": \"application/json\",\n//   },\n// });\n\nexport const api = new Api({\n  baseUrl: \"http://localhost:3000/\",\n});"]},"metadata":{},"sourceType":"module"}