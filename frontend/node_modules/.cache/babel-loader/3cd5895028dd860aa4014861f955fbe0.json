{"ast":null,"code":"var _jsxFileName = \"/Users/nikolay/Desktop/react-mesto-api-full/frontend/src/components/EditProfilePopup.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport PopupWithForm from \"./PopupWithForm\";\nimport { CurrentUserContext } from \"../contexts/CurrentUserContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction EditProfilePopup(_ref) {\n  _s();\n\n  let {\n    isOpen,\n    onClose,\n    onUpdateUser\n  } = _ref;\n  const [name, setName] = React.useState(\"\");\n  const [description, setDescription] = React.useState(\"\");\n\n  function handleNameChange(e) {\n    setName(e.target.value);\n  }\n\n  function handleJobChange(e) {\n    setDescription(e.target.value);\n  }\n\n  const currentUser = React.useContext(CurrentUserContext);\n  React.useEffect(() => {\n    setName(currentUser.name);\n    setDescription(currentUser.about);\n  }, [currentUser, isOpen]);\n\n  function handleSubmit(e) {\n    // Запрещаем браузеру переходить по адресу формы\n    e.preventDefault(); // Передаём значения управляемых компонентов во внешний обработчик\n\n    onUpdateUser(name, description);\n  }\n\n  return /*#__PURE__*/_jsxDEV(PopupWithForm, {\n    name: \"formEdit\",\n    isOpen: isOpen,\n    title: \"\\u0420\\u0435\\u0434\\u0430\\u043A\\u0442\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C \\u043F\\u0440\\u043E\\u0444\\u0438\\u043B\\u044C\",\n    formName: \"formEdit\",\n    buttonText: \"\\u0421\\u043E\\u0445\\u0440\\u0430\\u043D\\u0438\\u0442\\u044C\",\n    onClose: onClose,\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      id: \"name-input\",\n      name: \"name\",\n      className: \"popup__input popup__input-name\",\n      placeholder: \"\\u0418\\u043C\\u044F\",\n      minLength: \"2\",\n      maxLength: \"40\",\n      required: true,\n      value: name || 'Имя',\n      onChange: handleNameChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"name-input-error popup__error\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      id: \"job-input\",\n      name: \"job\",\n      className: \"popup__input popup__input-job\",\n      placeholder: \"\\u041E \\u0441\\u0435\\u0431\\u0435\",\n      minLength: \"2\",\n      maxLength: \"200\",\n      required: true,\n      value: description || 'Профессия',\n      onChange: handleJobChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"job-input-error popup__error\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n\n_s(EditProfilePopup, \"2NM8e/hg17akz+vK4kFYdGbn3Sg=\");\n\n_c = EditProfilePopup;\nexport default EditProfilePopup;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditProfilePopup\");","map":{"version":3,"sources":["/Users/nikolay/Desktop/react-mesto-api-full/frontend/src/components/EditProfilePopup.js"],"names":["React","PopupWithForm","CurrentUserContext","EditProfilePopup","isOpen","onClose","onUpdateUser","name","setName","useState","description","setDescription","handleNameChange","e","target","value","handleJobChange","currentUser","useContext","useEffect","about","handleSubmit","preventDefault"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,SAASC,kBAAT,QAAmC,gCAAnC;;;AAEA,SAASC,gBAAT,OAA6D;AAAA;;AAAA,MAAnC;AAAEC,IAAAA,MAAF;AAAUC,IAAAA,OAAV;AAAmBC,IAAAA;AAAnB,GAAmC;AAC3D,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBR,KAAK,CAACS,QAAN,CAAe,EAAf,CAAxB;AACA,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCX,KAAK,CAACS,QAAN,CAAe,EAAf,CAAtC;;AAEA,WAASG,gBAAT,CAA0BC,CAA1B,EAA6B;AAC3BL,IAAAA,OAAO,CAACK,CAAC,CAACC,MAAF,CAASC,KAAV,CAAP;AACD;;AAED,WAASC,eAAT,CAAyBH,CAAzB,EAA4B;AAC1BF,IAAAA,cAAc,CAACE,CAAC,CAACC,MAAF,CAASC,KAAV,CAAd;AACD;;AAED,QAAME,WAAW,GAAGjB,KAAK,CAACkB,UAAN,CAAiBhB,kBAAjB,CAApB;AAEAF,EAAAA,KAAK,CAACmB,SAAN,CAAgB,MAAM;AACpBX,IAAAA,OAAO,CAACS,WAAW,CAACV,IAAb,CAAP;AACAI,IAAAA,cAAc,CAACM,WAAW,CAACG,KAAb,CAAd;AACD,GAHD,EAGG,CAACH,WAAD,EAAcb,MAAd,CAHH;;AAKA,WAASiB,YAAT,CAAsBR,CAAtB,EAAyB;AACvB;AACAA,IAAAA,CAAC,CAACS,cAAF,GAFuB,CAIvB;;AACAhB,IAAAA,YAAY,CAAEC,IAAF,EAAQG,WAAR,CAAZ;AACD;;AAED,sBACE,QAAC,aAAD;AACE,IAAA,IAAI,EAAC,UADP;AAEE,IAAA,MAAM,EAAEN,MAFV;AAGE,IAAA,KAAK,EAAC,2HAHR;AAIE,IAAA,QAAQ,EAAC,UAJX;AAKE,IAAA,UAAU,EAAC,wDALb;AAME,IAAA,OAAO,EAAEC,OANX;AAOE,IAAA,QAAQ,EAAEgB,YAPZ;AAAA,4BASE;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,EAAE,EAAC,YAFL;AAGE,MAAA,IAAI,EAAC,MAHP;AAIE,MAAA,SAAS,EAAC,gCAJZ;AAKE,MAAA,WAAW,EAAC,oBALd;AAME,MAAA,SAAS,EAAC,GANZ;AAOE,MAAA,SAAS,EAAC,IAPZ;AAQE,MAAA,QAAQ,MARV;AASE,MAAA,KAAK,EAAEd,IAAI,IAAI,KATjB;AAUE,MAAA,QAAQ,EAAEK;AAVZ;AAAA;AAAA;AAAA;AAAA,YATF,eAqBE;AAAM,MAAA,SAAS,EAAC;AAAhB;AAAA;AAAA;AAAA;AAAA,YArBF,eAsBE;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,EAAE,EAAC,WAFL;AAGE,MAAA,IAAI,EAAC,KAHP;AAIE,MAAA,SAAS,EAAC,+BAJZ;AAKE,MAAA,WAAW,EAAC,iCALd;AAME,MAAA,SAAS,EAAC,GANZ;AAOE,MAAA,SAAS,EAAC,KAPZ;AAQE,MAAA,QAAQ,MARV;AASE,MAAA,KAAK,EAAEF,WAAW,IAAI,WATxB;AAUE,MAAA,QAAQ,EAAEM;AAVZ;AAAA;AAAA;AAAA;AAAA,YAtBF,eAkCE;AAAM,MAAA,SAAS,EAAC;AAAhB;AAAA;AAAA;AAAA;AAAA,YAlCF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAsCD;;GAjEQb,gB;;KAAAA,gB;AAmET,eAAeA,gBAAf","sourcesContent":["import React from \"react\";\nimport PopupWithForm from \"./PopupWithForm\";\nimport { CurrentUserContext } from \"../contexts/CurrentUserContext\";\n\nfunction EditProfilePopup({ isOpen, onClose, onUpdateUser }) {\n  const [name, setName] = React.useState(\"\");\n  const [description, setDescription] = React.useState(\"\");\n\n  function handleNameChange(e) {\n    setName(e.target.value);\n  }\n\n  function handleJobChange(e) {\n    setDescription(e.target.value);\n  }\n\n  const currentUser = React.useContext(CurrentUserContext);\n\n  React.useEffect(() => {\n    setName(currentUser.name);\n    setDescription(currentUser.about);\n  }, [currentUser, isOpen]);\n\n  function handleSubmit(e) {\n    // Запрещаем браузеру переходить по адресу формы\n    e.preventDefault();\n\n    // Передаём значения управляемых компонентов во внешний обработчик\n    onUpdateUser( name, description );\n  }\n\n  return (\n    <PopupWithForm\n      name=\"formEdit\"\n      isOpen={isOpen}\n      title=\"Редактировать профиль\"\n      formName=\"formEdit\"\n      buttonText=\"Сохранить\"\n      onClose={onClose}\n      onSubmit={handleSubmit}\n    >\n      <input\n        type=\"text\"\n        id=\"name-input\"\n        name=\"name\"\n        className=\"popup__input popup__input-name\"\n        placeholder=\"Имя\"\n        minLength=\"2\"\n        maxLength=\"40\"\n        required\n        value={name || 'Имя'}\n        onChange={handleNameChange}\n      />\n      <span className=\"name-input-error popup__error\"></span>\n      <input\n        type=\"text\"\n        id=\"job-input\"\n        name=\"job\"\n        className=\"popup__input popup__input-job\"\n        placeholder=\"О себе\"\n        minLength=\"2\"\n        maxLength=\"200\"\n        required\n        value={description || 'Профессия'}\n        onChange={handleJobChange}\n      />\n      <span className=\"job-input-error popup__error\"></span>\n    </PopupWithForm>\n  );\n}\n\nexport default EditProfilePopup;\n"]},"metadata":{},"sourceType":"module"}