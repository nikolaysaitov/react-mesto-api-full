[{"/Users/nikolay/Desktop/react-mesto-api-full/frontend/src/index.js":"1","/Users/nikolay/Desktop/react-mesto-api-full/frontend/src/reportWebVitals.js":"2","/Users/nikolay/Desktop/react-mesto-api-full/frontend/src/components/App.js":"3","/Users/nikolay/Desktop/react-mesto-api-full/frontend/src/utils/auth.js":"4","/Users/nikolay/Desktop/react-mesto-api-full/frontend/src/components/Footer.js":"5","/Users/nikolay/Desktop/react-mesto-api-full/frontend/src/components/Header.js":"6","/Users/nikolay/Desktop/react-mesto-api-full/frontend/src/components/Main.js":"7","/Users/nikolay/Desktop/react-mesto-api-full/frontend/src/components/PopupWithForm.js":"8","/Users/nikolay/Desktop/react-mesto-api-full/frontend/src/components/ImagePopup.js":"9","/Users/nikolay/Desktop/react-mesto-api-full/frontend/src/components/EditProfilePopup.js":"10","/Users/nikolay/Desktop/react-mesto-api-full/frontend/src/components/EditAvatarPopup.js":"11","/Users/nikolay/Desktop/react-mesto-api-full/frontend/src/components/AddPlacePopup.js":"12","/Users/nikolay/Desktop/react-mesto-api-full/frontend/src/components/Register.js":"13","/Users/nikolay/Desktop/react-mesto-api-full/frontend/src/components/Login.js":"14","/Users/nikolay/Desktop/react-mesto-api-full/frontend/src/components/ProtectedRoute.js":"15","/Users/nikolay/Desktop/react-mesto-api-full/frontend/src/components/InfoTooltip.js":"16","/Users/nikolay/Desktop/react-mesto-api-full/frontend/src/utils/Api.js":"17","/Users/nikolay/Desktop/react-mesto-api-full/frontend/src/contexts/CurrentUserContext.js":"18","/Users/nikolay/Desktop/react-mesto-api-full/frontend/src/components/Card.js":"19"},{"size":581,"mtime":1653380756000,"results":"20","hashOfConfig":"21"},{"size":362,"mtime":1653380756000,"results":"22","hashOfConfig":"21"},{"size":8598,"mtime":1653380756000,"results":"23","hashOfConfig":"21"},{"size":1225,"mtime":1653380756000,"results":"24","hashOfConfig":"21"},{"size":200,"mtime":1653380756000,"results":"25","hashOfConfig":"21"},{"size":1050,"mtime":1653380756000,"results":"26","hashOfConfig":"21"},{"size":1785,"mtime":1653380756000,"results":"27","hashOfConfig":"21"},{"size":847,"mtime":1653380756000,"results":"28","hashOfConfig":"21"},{"size":629,"mtime":1653380756000,"results":"29","hashOfConfig":"21"},{"size":2012,"mtime":1653380756000,"results":"30","hashOfConfig":"21"},{"size":985,"mtime":1653380756000,"results":"31","hashOfConfig":"21"},{"size":1506,"mtime":1653380756000,"results":"32","hashOfConfig":"21"},{"size":1933,"mtime":1653380756000,"results":"33","hashOfConfig":"21"},{"size":1609,"mtime":1653380756000,"results":"34","hashOfConfig":"21"},{"size":351,"mtime":1653380756000,"results":"35","hashOfConfig":"21"},{"size":766,"mtime":1653380756000,"results":"36","hashOfConfig":"21"},{"size":2103,"mtime":1653380756000,"results":"37","hashOfConfig":"21"},{"size":84,"mtime":1653380756000,"results":"38","hashOfConfig":"21"},{"size":2043,"mtime":1653380756000,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"sly4vm",{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49"},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","suppressedMessages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","suppressedMessages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","suppressedMessages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","suppressedMessages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","suppressedMessages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","suppressedMessages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","suppressedMessages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","suppressedMessages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/nikolay/Desktop/react-mesto-api-full/frontend/src/index.js",[],[],"/Users/nikolay/Desktop/react-mesto-api-full/frontend/src/reportWebVitals.js",[],[],"/Users/nikolay/Desktop/react-mesto-api-full/frontend/src/components/App.js",["98","99","100"],[],"import React, { useState, useEffect } from \"react\";\nimport { Route, Switch, useHistory } from \"react-router-dom\";\nimport Header from \"./Header\";\nimport Main from \"./Main\";\nimport Footer from \"./Footer\";\nimport PopupWithForm from \"./PopupWithForm\";\nimport ImagePopup from \"./ImagePopup\";\nimport { api } from \"../utils/Api\";\nimport { CurrentUserContext } from \"../contexts/CurrentUserContext\";\nimport EditProfilePopup from \"./EditProfilePopup\";\nimport EditAvatarPopup from \"./EditAvatarPopup\";\nimport AddPlacePopup from \"./AddPlacePopup\";\nimport Login from \"./Login\";\nimport * as auth from \"../utils/auth.js\";\nimport ProtectedRoute from \"./ProtectedRoute\";\nimport Register from \"./Register\";\nimport InfoTooltip from \"./InfoTooltip\";\n\nfunction App() {\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = useState(false);\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = useState(false);\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = useState(false);\n  const [selectedCard, setSelectedCard] = useState({});\n  const [currentUser, setCurrentUser] = useState({});\n  const [cards, setCards] = useState([]);\n  const [loggedIn, setLoggedIn] = useState(false);\n  const [email, setEmail] = useState(\"\");\n  const history = useHistory();\n  const [isReg, setIsReg] = useState(false);\n  const [isInfoPopupOpen, setInfoPopupOpen] = useState(false);\n\n  const handleEditAvatarClick = () => {\n    setIsEditAvatarPopupOpen(true);\n  };\n\n  const handleEditProfileClick = () => {\n    setIsEditProfilePopupOpen(true);\n  };\n\n  const handleAddPlaceClick = () => {\n    setIsAddPlacePopupOpen(true);\n  };\n\n  const handleCardClick = (card) => {\n    setSelectedCard({\n      isOpened: true,\n      name: card.name,\n      link: card.link,\n    });\n  };\n\n  function closeAllPopups() {\n    setIsEditAvatarPopupOpen(false);\n    setIsEditProfilePopupOpen(false);\n    setIsAddPlacePopupOpen(false);\n    setInfoPopupOpen(false);\n    setSelectedCard({ ...selectedCard, isOpened: false });\n  }\n\n  useEffect(() => {\n    handleTokenCheck();\n    if (loggedIn) {\n      Promise.all([api.getProfile(), api.getInitialCards()])\n        .then(([userData, cardData]) => {\n          setCurrentUser(userData);\n          setCards(cardData);\n        })\n        .catch((err) => console.log(`Ошибка ${err}`));\n    }\n  }, [loggedIn]);\n\n  const isOpen =\n    isEditAvatarPopupOpen ||\n    isEditProfilePopupOpen ||\n    isAddPlacePopupOpen ||\n    selectedCard ||\n    isInfoPopupOpen;\n\n  useEffect(() => {\n    function closeByEscape(event) {\n      if (event.key === \"Escape\") {\n        closeAllPopups();\n      }\n    }\n    if (isOpen) {\n      document.addEventListener(\"keydown\", closeByEscape);\n      return () => {\n        document.removeEventListener(\"keydown\", closeByEscape);\n      };\n    }\n  }, [isOpen]);\n\n  useEffect(() => {\n    if (!isOpen) return;\n    function handleOverley(event) {\n      if (\n        event.target.classList.contains(\"popup_open\") ||\n        event.target.classList.contains(\"popup__close\")\n      ) {\n        closeAllPopups();\n      }\n    }\n    document.addEventListener(\"mousedown\", handleOverley);\n    return () => document.removeEventListener(\"mousedown\", handleOverley);\n  }, [isOpen]);\n\n  useEffect(() => {\n    api\n      .getProfile()\n      .then((res) => setCurrentUser(res))\n      .catch((err) => console.log(err));\n  }, []);\n\n  useEffect(() => {\n    api\n      .getInitialCards()\n      .then((cards) => setCards(cards))\n      .catch((err) => console.log(err));\n  }, []);\n\n  function handleCardLike(card) {\n    // Снова проверяем, есть ли уже лайк на этой карточке\n    const isLiked = card.likes.some((i) => i._id === currentUser._id);\n\n    // Отправляем запрос в API и получаем обновлённые данные карточки\n    const changeLikeCardStatus = !isLiked\n      ? api.addLike(card._id)\n      : api.deleteLike(card._id);\n    changeLikeCardStatus\n      .then((newCard) => {\n        setCards((item) => item.map((c) => (c._id === card._id ? newCard : c)));\n      })\n      .catch((err) => console.log(`Ошибка ${err}`));\n  }\n\n  const handleCardDelete = (card) => {\n    api\n      .deleteCard(card._id)\n      .then(() => {\n        setCards((cards) => cards.filter((c) => c._id !== card._id));\n        closeAllPopups();\n      })\n      .catch((err) => console.log(`Ошибка ${err}`));\n  };\n\n  const handleUpdateUser = (name, about) => {\n    api\n      .editProfile(name, about)\n      .then((item) => {\n        setCurrentUser(item);\n        closeAllPopups();\n      })\n      .catch((err) => console.log(`Ошибка ${err}`));\n  };\n  const handleUpdateAvatar = (avatar) => {\n    api\n      .updateAvatar(avatar.avatar)\n      .then((item) => {\n        setCurrentUser(item);\n        closeAllPopups();\n      })\n      .catch((err) => console.log(`Ошибка ${err}`));\n  };\n  const handleAddPlaceSubmit = (name, link) => {\n    api\n      .addCard(name, link)\n      .then((newCard) => {\n        setCards([newCard, ...cards]);\n        closeAllPopups();\n      })\n      .catch((err) => console.log(`Ошибка ${err}`));\n  };\n\n  function handleLogin() {\n    setLoggedIn(true);\n  }\n  function handleLoginSubmit(email, password) {\n    auth\n      .authorize(email, password)\n      .then((data) => {\n        localStorage.setItem(\"jwt\", data.token);\n        setEmail(email);\n        handleLogin();\n        history.push(\"/\");\n      })\n      .catch((err) => {\n        setInfoPopupOpen(true);\n        console.log(`Ошибка входа ${err}`);\n        setIsReg(false);\n      });\n  }\n\n  function handleRegistrSubmit(email, password) {\n    auth\n      .register(email, password)\n      .then((res) => {\n        if (res) {\n          setIsReg(true);\n          history.push(\"/sign-in\");\n        } else {\n          setIsReg(false);\n          console.log(\"else\");\n        }\n      })\n      .catch((err) => {\n        console.log(`Ошибка входа ${err}`);\n        setIsReg(false);\n      })\n      .finally(() => {\n        setInfoPopupOpen(true);\n      });\n  }\n\n  function handleExit() {\n    localStorage.removeItem(\"jwt\");\n    setLoggedIn(false);\n    history.push(\"/sign-in\");\n  }\n\n  function handleTokenCheck() {\n    const jwt = localStorage.getItem(\"jwt\");\n    if (jwt) {\n      auth\n        .checkToken(jwt)\n        .then((res) => {\n          handleLogin();\n          history.push(\"/\");\n          setEmail(res.data.email);\n        })\n        .catch((err) => console.log(err));\n    }\n  }\n\n  return (\n    \n    <div className=\"page\">\n      <CurrentUserContext.Provider value={currentUser}>\n        <Header email={email} onExit={handleExit} />\n        \n        <Switch>\n       \n          <ProtectedRoute\n            exact\n            path=\"/\"\n            loggedIn={loggedIn}\n            component={Main}\n            onEditAvatar={handleEditAvatarClick}\n            onEditProfile={handleEditProfileClick}\n            onAddPlace={handleAddPlaceClick}\n            onCardClick={handleCardClick}\n            onCardLike={handleCardLike}\n            cards={cards}\n            onCardDelete={handleCardDelete}\n          />\n          <Route path=\"/sign-in\">\n            <Login handleLogin={handleLogin} onSubmit={handleLoginSubmit} />\n          </Route>\n\n          <Route path=\"/sign-up\">\n            <Register\n              handleLogin={handleLogin}\n              onSubmit={handleRegistrSubmit}\n            />\n          </Route>\n          \n        </Switch>\n       \n        <InfoTooltip isOPen={isInfoPopupOpen} isReg={isReg} />\n\n        {loggedIn && <Footer />}\n        <EditProfilePopup\n          isOpen={isEditProfilePopupOpen}\n          onClose={closeAllPopups}\n          onUpdateUser={handleUpdateUser}\n        />\n        <EditAvatarPopup\n          isOpen={isEditAvatarPopupOpen}\n          onClose={closeAllPopups}\n          onUpdateAvatar={handleUpdateAvatar}\n        />\n        <AddPlacePopup\n          isOpen={isAddPlacePopupOpen}\n          onClose={closeAllPopups}\n          onAddPlace={handleAddPlaceSubmit}\n        />\n        {/* попап вы уверены? */}\n        <PopupWithForm\n          name=\"formDelete\"\n          title=\"Вы уверены?\"\n          id=\"popup__form popup__form_add\"\n          formName=\"formDelete\"\n          buttonText=\"Да\"\n          onClose={closeAllPopups}\n        >\n          <input name=\"formDelete\" className=\"popup__form popup__form_add\" />\n        </PopupWithForm>\n\n        {/* попап открытия картинки */}\n        <ImagePopup selectedCard={selectedCard} onClose={closeAllPopups} />\n      </CurrentUserContext.Provider>\n    </div>\n   \n  );\n}\n\nexport default App;\n","/Users/nikolay/Desktop/react-mesto-api-full/frontend/src/utils/auth.js",[],[],"/Users/nikolay/Desktop/react-mesto-api-full/frontend/src/components/Footer.js",[],[],"/Users/nikolay/Desktop/react-mesto-api-full/frontend/src/components/Header.js",[],[],"/Users/nikolay/Desktop/react-mesto-api-full/frontend/src/components/Main.js",[],[],"/Users/nikolay/Desktop/react-mesto-api-full/frontend/src/components/PopupWithForm.js",[],[],"/Users/nikolay/Desktop/react-mesto-api-full/frontend/src/components/ImagePopup.js",[],[],"/Users/nikolay/Desktop/react-mesto-api-full/frontend/src/components/EditProfilePopup.js",[],[],"/Users/nikolay/Desktop/react-mesto-api-full/frontend/src/components/EditAvatarPopup.js",[],[],"/Users/nikolay/Desktop/react-mesto-api-full/frontend/src/components/AddPlacePopup.js",[],[],"/Users/nikolay/Desktop/react-mesto-api-full/frontend/src/components/Register.js",[],[],"/Users/nikolay/Desktop/react-mesto-api-full/frontend/src/components/Login.js",[],[],"/Users/nikolay/Desktop/react-mesto-api-full/frontend/src/components/ProtectedRoute.js",[],[],"/Users/nikolay/Desktop/react-mesto-api-full/frontend/src/components/InfoTooltip.js",[],[],"/Users/nikolay/Desktop/react-mesto-api-full/frontend/src/utils/Api.js",[],[],"/Users/nikolay/Desktop/react-mesto-api-full/frontend/src/contexts/CurrentUserContext.js",[],[],"/Users/nikolay/Desktop/react-mesto-api-full/frontend/src/components/Card.js",[],[],{"ruleId":"101","severity":1,"message":"102","line":70,"column":6,"nodeType":"103","endLine":70,"endColumn":16,"suggestions":"104"},{"ruleId":"101","severity":1,"message":"105","line":91,"column":6,"nodeType":"103","endLine":91,"endColumn":14,"suggestions":"106"},{"ruleId":"101","severity":1,"message":"105","line":105,"column":6,"nodeType":"103","endLine":105,"endColumn":14,"suggestions":"107"},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'handleTokenCheck'. Either include it or remove the dependency array.","ArrayExpression",["108"],"React Hook useEffect has a missing dependency: 'closeAllPopups'. Either include it or remove the dependency array.",["109"],["110"],{"desc":"111","fix":"112"},{"desc":"113","fix":"114"},{"desc":"113","fix":"115"},"Update the dependencies array to be: [handleTokenCheck, loggedIn]",{"range":"116","text":"117"},"Update the dependencies array to be: [closeAllPopups, isOpen]",{"range":"118","text":"119"},{"range":"120","text":"119"},[2293,2303],"[handleTokenCheck, loggedIn]",[2766,2774],"[closeAllPopups, isOpen]",[3172,3180]]